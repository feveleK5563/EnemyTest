#include "MyGameMain.h"
#include "EnemyMoveManager.h"

//ゲーム情報
struct EnemyData
{
	ML::Vec2 pos;			//座標
	EnemyMoveManager emm;	//動作の管理

	EnemyData():
		pos({0, 0}),
		emm(EnemyMoveManager(&pos)){}
} ed;

//-----------------------------------------------------------------------------
//初期化処理
//機能概要：プログラム起動時に１回実行される（素材などの準備を行う）
//-----------------------------------------------------------------------------
void  MyGameMain_Initalize( )
{
	DG::Image_Create("Enemy", "./data/image/Slime.png");

	//敵の情報をここで設定(実際はこんなことしない)
	ed.pos = { 0, 200 };
	ed.emm.SetMovePattern(1, 0, 2, 30, 30, 30);
}
//-----------------------------------------------------------------------------
//解放処理
//機能概要：プログラム終了時に１回実行される（素材などの解放を行う）
//-----------------------------------------------------------------------------
void  MyGameMain_Finalize( )
{
	DG::Image_Erase("Enemy");
}
//-----------------------------------------------------------------------------
//更新処理
//機能概要：ゲームの１フレームに当たる処理
//-----------------------------------------------------------------------------
void  MyGameMain_UpDate( )
{
	//敵の動作を更新
	ed.emm.Move();
}
//-----------------------------------------------------------------------------
//描画処理
//機能概要：ゲームの１フレームに当たる表示処理 ２Ｄ
//-----------------------------------------------------------------------------
void  MyGameMain_Render2D( )
{
	{	//画像表示
		ML::Box2D draw(-16, -16, 32, 32);
		ML::Box2D src(0, 32, 32, 32);
		draw.Offset(ed.pos);
		DG::Image_Draw("Enemy", draw, src);
	}
}